(()=>{var e={};e.id=504,e.ids=[504],e.modules={10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},96070:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>m,routeModule:()=>p,serverHooks:()=>l,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>d});var s={};r.r(s),r.d(s,{GET:()=>i});var o=r(42706),n=r(28203),a=r(45994),u=r(39187);async function i(e,{params:t}){let{courseId:r}=await t;if(!r)return u.NextResponse.json({message:"Course ID is required"},{status:400});try{let e=await fetch(`${process.env.BACKEND_API_URL}/api/enrollments/count/${r}`,{method:"GET"}),t=await e.json();if(!e.ok)throw Error(t.message||"Failed to fetch enrollment count");return u.NextResponse.json(t)}catch(e){return u.NextResponse.json({message:e.message},{status:500})}}let p=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/enrollments/count/[courseId]/route",pathname:"/api/enrollments/count/[courseId]",filename:"route",bundlePath:"app/api/enrollments/count/[courseId]/route"},resolvedPagePath:"F:\\websites\\project\\milton\\biddarthy\\src\\app\\api\\enrollments\\count\\[courseId]\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:c,workUnitAsyncStorage:d,serverHooks:l}=p;function m(){return(0,a.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:d})}},96487:()=>{},78335:()=>{}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[638,452],()=>r(96070));module.exports=s})();